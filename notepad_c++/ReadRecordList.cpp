#include <Windows.h>
#include "Default.h"
#include <synchapi.h>
#include <iostream>
#include <stdio.h>
#include <string>
#include <ctime>
#include <fstream>

using namespace std;

void ReadRecordList(int number)
{

	static char buff[1024][1024];
	int i = 0;
	int count = 1;
	string buffer;
	Data2 document2;

	//Очищаем данные в файле bufferRead
	string filename = "Buffer\\bufferRead.txt";

	if (remove(filename.c_str()) == 0)
	{
		cout << endl << " Обновление списка ";

		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " ." << endl;
		system("cls");
	}

	for (int j = 1; j <= number; j++)
	{
		buffer = to_string(count);

		//считывам текстовые файлы один за одним и записываем их в структуру Date2
		ifstream filesWriteListNumber(buffer + ".txt");
		filesWriteListNumber >> document2.contBuf;
		filesWriteListNumber >> document2.nameBuf;
		filesWriteListNumber >> document2.descriptionBuf;
		filesWriteListNumber >> document2.prioritetBuf;
		filesWriteListNumber >> document2.dateBuf;

		
		// записываем даные из структуры Date2 в файл bufferRaed по порядку
		ofstream files;
		files.open(L"Buffer\\bufferRead.txt", ios::app);
		files << endl;
		files << " Запись номер: " << document2.contBuf << endl;
		files << " Название:     " << document2.nameBuf << endl;
		files << " Описание:     " << document2.descriptionBuf << endl;
		files << " Приоритет:    " << document2.prioritetBuf << endl;
		files << " Дата:         " << document2.dateBuf << endl;

		files << " ________________ " << endl;
		files.close();

		count++;
	}

	cout << " Весь список: " << endl;

	// считываем файл и выводим на экран
	ifstream files(L"Buffer\\bufferRead.txt");

	if (!files.is_open() == true)
	{
		cout << endl << " Вы не создали ни одной записи" << endl;

		Sleep(1000);
		cout << " Сейчас вы будете перенаправлены в меню";

		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " ." << endl;
		system("cls");
		Menu();
	}

	else
	{
		while (!files.eof())
		{
			files.getline(buff[i], sizeof(buff));
			cout << buff[i] << endl;
			++i;
		}
		files.close();

	}

	MenuList(number);
	
}

void MenuList(int number)
{
	cout << endl;
	cout << " Отобразить список на день         - нажмите [1]" << endl;
	cout << " Отобразить список на неделю       - нажмите [2]" << endl;
	cout << " Отобразить список на месяц        - нажмите [3]" << endl;
	cout << " Вернуться в меню                  - нажмите [4]" << endl;

	char p;

	do
	{
		cout << endl << " Выберите нужный пункт: ";

		cin >> p;

		switch (p)
		{
		case '1':
			system("cls");
			ListForTheDay(number);
			break;
		case '2':
			system("cls");
			ListForTheWeek(number);
			break;
		case '3':
			system("cls");
			ListForTheMonth(number);
		case '4':
			system("cls");
			Menu();
		default:
			cout << endl << " Введены неверные значения. Попробуйте еще раз." << endl;
			break;
		}

	} while (true);

}

void ListForTheDay(int number)
{
	static char buff[1024][1024];
	int u = 0;
	char f;
	int i = 0;
	bool temp = false;
	int next = 0;
	int count = 1;
	string buffer;
	Data2 document2;

	ofstream files;

	//Очищаем данные в файле bufferRead
	string filename = "Buffer\\bufferRead.txt";

	if (remove(filename.c_str()) == 0)
	{
		cout << " Отображение записей за день." << endl;
		cout << " Введите число/день: ";
		cin >> u;
		cout << endl << " Обновление списка ";

		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " ." << endl;
		system("cls");
	}

	for (int j = 1; j <= number; j++)
	{
		buffer = to_string(count);

		//считывам текстовые файлы один за одним и записываем их в структуру Date2
		ifstream filesWriteListNumber(buffer + ".txt");
		filesWriteListNumber >> document2.contBuf;
		filesWriteListNumber >> document2.nameBuf;
		filesWriteListNumber >> document2.descriptionBuf;
		filesWriteListNumber >> document2.prioritetBuf;
		filesWriteListNumber >> document2.dateBuf;
		filesWriteListNumber >> document2.fileNumPr;
		filesWriteListNumber >> document2.fileNumDay;

		if (document2.fileNumDay == u)
		{
			// записываем даные из структуры Date2 в файл bufferRaed по порядку
			files.open(L"Buffer\\bufferRead.txt", ios::app);
			files << endl;
			files << " Запись номер: " << document2.contBuf << endl;
			files << " Название:     " << document2.nameBuf << endl;
			files << " Описание:     " << document2.descriptionBuf << endl;
			files << " Приоритет:    " << document2.prioritetBuf << endl;
			files << " Дата:         " << document2.dateBuf << endl;
			files << " ________________ " << endl;
			files.close();

			count++;
			temp = true;
		}

		else
		{
			count++;
			next = 1;
		}
		
	}

	if (temp == true)
	{
		next = 0;

		cout << " Отображение записей за день." << endl;
		cout << " Отображен список за "  << u << "-е число" << endl;

		ifstream files(L"Buffer\\bufferRead.txt");

		while (!files.eof())
		{
			files.getline(buff[i], sizeof(buff));
			cout << buff[i] << endl;
			++i;
		}

		files.close();
		ReturnMenu();
	}

	if (next == 1)
	{
		cout << " Отображение записей за день." << endl;
		cout << " Нет записей за " << u << "-е число" << endl;
		ReturnMenu();
	}

}

void ListForTheWeek(int number)
{
	cout << " Отображение записей за неделю." << endl;
	cout << " Нет в структуре недели " << endl;
	ReturnMenu();

}

void ListForTheMonth(int number)
{
	static char buff[1024][1024];
	int u = 0;
	char f;
	int i = 0;
	bool temp = false;
	int next = 0;
	int count = 1;
	string buffer;
	Data2 document2;

	ofstream files;

	//Очищаем данные в файле bufferRead
	string filename = "Buffer\\bufferRead.txt";

	if (remove(filename.c_str()) == 0)
	{
		cout << " Отображение записей за месяц." << endl;
		cout << " Введите число/месяц: ";
		cin >> u;
		cout << endl << " Обновление списка ";

		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " .";
		Sleep(700);
		cout << " ." << endl;
		system("cls");
	}

	for (int j = 1; j <= number; j++)
	{
		buffer = to_string(count);

		//считывам текстовые файлы один за одним и записываем их в структуру Date2
		ifstream filesWriteListNumber(buffer + ".txt");
		filesWriteListNumber >> document2.contBuf;
		filesWriteListNumber >> document2.nameBuf;
		filesWriteListNumber >> document2.descriptionBuf;
		filesWriteListNumber >> document2.prioritetBuf;
		filesWriteListNumber >> document2.dateBuf;
		filesWriteListNumber >> document2.fileNumPr;
		filesWriteListNumber >> document2.fileNumDay;
		filesWriteListNumber >> document2.fileNumMonth;


		if (document2.fileNumMonth == u)
		{	
			// записываем даные из структуры Date2 в файл bufferRaed по порядку
			files.open(L"Buffer\\bufferRead.txt", ios::app);
			files << endl;
			files << " Запись номер: " << document2.contBuf << endl;
			files << " Название:     " << document2.nameBuf << endl;
			files << " Описание:     " << document2.descriptionBuf << endl;
			files << " Приоритет:    " << document2.prioritetBuf << endl;
			files << " Дата:         " << document2.dateBuf << endl;
			files << " ________________ " << endl;
			files.close();

			count++;
			temp = true;
		}

		else
		{
			count++;
			next = 1;
		}

	}

	if (temp == true)
	{
		next = 0;

		cout << " Отображение записей за месяц." << endl;
		cout << " Отображен список за " << u << "-ый месяц" << endl;

		ifstream files(L"Buffer\\bufferRead.txt");

		while (!files.eof())
		{
			files.getline(buff[i], sizeof(buff));
			cout << buff[i] << endl;
			++i;
		}

		files.close();
		ReturnMenu();
	}

	if (next == 1)
	{
		cout << " Отображение записей за месяц." << endl;
		cout << " Нет записей за " << u << "-ый месяц" << endl;
		ReturnMenu();
	}
}
